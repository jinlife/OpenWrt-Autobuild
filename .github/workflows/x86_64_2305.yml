name: X86-64 2305 Generic

on:
  repository_dispatch:
    types: X86-64
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: Clone Repository
      uses: actions/checkout@v3
      with:
        ref: master

    - name: Init build dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff -a
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install aria2
        sudo -E wget -P /usr/local/sbin/ https://github.com/HiGarfield/lede-17.01.4-Mod/raw/master/.github/backup/apt-fast
        sudo -E chmod -R 755 /usr/local/sbin/apt-fast
        sudo -E apt-fast -y -qq install dwarves llvm clang lldb lld build-essential rsync asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget ccache curl swig coreutils vim nano python3 python3-pip python3-ply haveged lrzsz scons libpython3-dev
        sudo -E pip3 install pyelftools pylibfdt
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo -E git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
        df -h

    - name: Clone OpenWrt
      id: co
      run: |
        REPO_URL=https://github.com/openwrt/openwrt
        REPO_TAG=v23.05.2
        git clone -b $REPO_TAG $REPO_URL openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        name_tag=${REPO_TAG}-r$(date +%g.%j)
        echo "release_tag=$name_tag" >> $GITHUB_OUTPUT

    - name: Clone immortalwrt
      run: |
        git clone -b openwrt-23.05 --depth 1 --single-branch https://github.com/immortalwrt/immortalwrt immortalwrt
        git clone -b openwrt-23.05 --depth 1 --single-branch https://github.com/immortalwrt/packages immortalwrt-packages
        git clone -b openwrt-23.05 --depth 1 --single-branch https://github.com/immortalwrt/luci immortalwrt-luci
        git clone -b openwrt-23.05 --depth 1 --single-branch https://github.com/openwrt/packages openwrt-packages
        git clone -b openwrt-23.05 --depth 1 --single-branch https://github.com/openwrt/luci openwrt-luci
        git clone -b master --depth 1 --single-branch https://github.com/fw876/helloworld helloworld
        git clone -b main --depth 1 --single-branch https://github.com/jinlife/unraid-r8125-r8152-driver unraid-r8125-r8152-driver
        git clone -b master --depth 1 --single-branch https://github.com/kiddin9/openwrt-packages kiddin9-openwrt-packages
        git clone -b main --depth 1 --single-branch https://github.com/Lienol/openwrt-package Lienol-openwrt-packages
        git clone -b master --depth 1 --single-branch https://github.com/coolsnowwolf/lede coolsnowwolf-lede
        git clone -b master --depth 1 --single-branch https://github.com/coolsnowwolf/luci coolsnowwolf-luci

    - name: Feeds update
      working-directory: ./openwrt
      run: |
        ./scripts/feeds clean
        ./scripts/feeds update -a && ./scripts/feeds install -a

    - name: Customize Packages
      working-directory: ./openwrt
      run: |
        cp ../scripts/00_customize_packages2305.sh .
        /bin/bash 00_customize_packages2305.sh
        cp ../scripts/x86-64_customization2305.sh .
        /bin/bash x86-64_customization2305.sh

    - name: Convert Translation
      working-directory: ./openwrt
      run: |
        cp ../scripts/01_convert_translation.sh .
        /bin/bash 01_convert_translation.sh

    - name: Add ACL
      working-directory: ./openwrt
      run: |
        cp ../scripts/02_create_acl_for_luci.sh .
        /bin/bash 02_create_acl_for_luci.sh -a
       
    - name: Make Config
      working-directory: ./openwrt
      run: |
        rm -rf feeds/packages/lang/golang
        cp -rfv ../openwrt-packages/lang/golang feeds/packages/lang/golang
        ./scripts/feeds install luci-app-passwall
        cp ../config/x86-64_2305_defconfig .config
        make defconfig

    - name: Make Download
      working-directory: ./openwrt
      run: |
        make download -j`nproc`

    - name: Compile OpenWrt
      working-directory: ./openwrt
      run: |
        make -j`nproc` V=s || make -j1 V=s

    - name: Assemble Artifact
      run: |
        rm -rf ./artifact
        ls openwrt/bin/targets/x86/64/
        mv openwrt/bin/targets/x86/64 ./artifact
        pushd artifact
        cat config.buildinfo
        rm -rf packages *.buildinfo *.manifest *rootfs* *-vmlinuz sha256sums *.bin *-combined.img.gz *.json
        popd

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.co.outputs.release_tag }}
        path: artifact/*

    - name: Upload Release
      uses: softprops/action-gh-release@v1
      with:
        draft: false
        prerelease: true
        tag_name: ${{ steps.co.outputs.release_tag }}
        files: artifact/*
