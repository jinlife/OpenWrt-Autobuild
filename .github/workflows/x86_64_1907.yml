name: X86-64-1907 Generic

on:
  repository_dispatch:
    types: X86-64-1907
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: Clone Repository
      uses: actions/checkout@v3
      with:
        ref: master

    - name: Init build dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff -a
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install aria2
        sudo -E wget -P /usr/local/sbin/ https://github.com/HiGarfield/lede-17.01.4-Mod/raw/master/.github/backup/apt-fast
        sudo -E chmod -R 755 /usr/local/sbin/apt-fast
        sudo -E apt-fast -y -qq install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E pip3 install pyelftools
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo -E git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
        df -h

    - name: Clone OpenWrt
      id: co
      run: |
        REPO_URL=https://github.com/openwrt/openwrt
        REPO_TAG=v19.07.10
        git clone -b $REPO_TAG $REPO_URL openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        name_tag=${REPO_TAG}-r$(date +%g.%j)
        echo "release_tag=$name_tag" >> $GITHUB_OUTPUT

    - name: Clone immortalwrt
      run: |
        git clone -b openwrt-21.02 --depth 1 --single-branch https://github.com/immortalwrt/immortalwrt

    - name: Feeds update
      working-directory: ./openwrt
      run: |
        ./scripts/feeds clean
        ./scripts/feeds update -a && ./scripts/feeds install -a

    - name: Customize Packages
      working-directory: ./openwrt
      run: |
        cp ../scripts/00_customize_packages.sh .        
        /bin/bash 00_customize_packages.sh
        cp ../scripts/x86-64_customization1907.sh .
        /bin/bash x86-64_customization1907.sh

    - name: Convert Translation
      working-directory: ./openwrt
      run: |
        cp ../scripts/01_convert_translation.sh .
        /bin/bash 01_convert_translation.sh

    - name: Add ACL
      working-directory: ./openwrt
      run: |
        cp ../scripts/02_create_acl_for_luci.sh .
        /bin/bash 02_create_acl_for_luci.sh -a
  
    - name: Make Config
      working-directory: ./openwrt
      run: |
        pushd feeds/packages/lang
        rm -rf golang && svn co https://github.com/openwrt/packages/trunk/lang/golang
        popd
        ./scripts/feeds install luci-app-passwall
        cp ../config/x86-64_1907_defconfig .config
        make defconfig

    - name: Make Download
      working-directory: ./openwrt
      run: |
        make download -j`nproc`

    - name: Compile OpenWrt
      working-directory: ./openwrt
      run: |
        make -j`nproc` V=s || make -j1 V=s

    - name: Assemble Artifact
      run: |
        rm -rf ./artifact
        ls openwrt/bin/targets/x86/64/
        mv openwrt/bin/targets/x86/64 ./artifact
        pushd artifact
        cat config.buildinfo
        rm -rf packages *.buildinfo *.manifest *rootfs* *-vmlinuz sha256sums *.bin *-combined.img.gz
        popd

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.co.outputs.release_tag }}
        path: artifact/*

    - name: Upload Release
      uses: softprops/action-gh-release@v1
      with:
        draft: false
        prerelease: true
        tag_name: ${{ steps.co.outputs.release_tag }}
        files: artifact/*
    